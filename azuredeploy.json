{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceIndex": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "An index to append to certain resource names to avoid collisions during testing."
            }
        },
        "vhdStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the new storage account where VHDs will be stored."
            }
        },
        "spinnakerVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_DS12_v2",
                "Standard_DS11_v2"
            ],
            "metadata": {
                "description": "Size of the Spinnaker VM."
            },
            "defaultValue": "Standard_DS12_v2"
        },
        "jenkinsVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_DS12_v2",
                "Standard_DS11_v2"
            ],
            "metadata": {
                "description": "Size of the Jenkins VM."
            },
            "defaultValue": "Standard_DS12_v2"
        },
        "spinnakerDnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "DNS prefix for the Spinnaker VM. dnsprefix.azureregion.cloudapp.azure.com, for example."
            }
        },
        "jenkinsDnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "DNS prefix for the Jenkins VM. dnsprefix.azureregion.cloudapp.azure.com, for example."
            }
        },
        "vmUserName": {
            "type": "string",
            "metadata": {
                "description": "Login user name for the spinnaker VM."
            }
        },
        "vmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Login password for the spinnaker VM."
            }
        },
        "spnClientId": {
            "type": "securestring",
            "metadata": {
                "description": "Client ID of the Azure AD application that has rights to spinnaker."
            }
        },
        "spnClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Client Secret of the Azure AD application that has rights to spinnaker."
            }
        },
        "spnTenantId": {
            "type": "securestring",
            "metadata": {
                "description": "Tenant ID of the Azure AD application that has rights to spinnaker."
            }
        },
        "spnSubscriptionId": {
            "type": "securestring",
            "metadata": {
                "description": "ID of the subscription to contain Spinnaker & Jenkins VMs."
            }
        },
        "templateLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/dcaro/spinnakerhackfest/dev",
            "metadata": {
                "description": "Template file location",
                "artifactsBaseUrl": "Base URL of the Publisher Template gallery package"
            }
        },
        "packerStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "New storage account to hold Packer assets."
            }
        },
        "keyVaultAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of your KeyVault account."
            }
        },
        "OracleUser": {
            "type": "string",
            "metadata": {
                "description": "Name of your Oracle Account used to download the JDK."
            }
        },
        "OraclePassword": {
            "type": "string",
            "metadata": {
                "description": "Password of your Oracle account."
            }
        },
        "JenkinsUser": {
            "type": "string",
            "metadata": {
                "description": "Name of your Jenkins User account."
            }
        },
        "JenkinsPassword": {
            "type": "string",
            "metadata": {
                "description": "Password of your Jenkins User account."
            }
        },
        "AptlyRepoName" : { 
            "type": "string",
            "metadata": {
                "description": "Aptly Repo name"
            }
        }
    },
    "variables": {
        "scenarioPrefix": "spinnaker",
        "templateAPIVersion": "2016-09-01",
        "templateBaseUrl": "[concat(parameters('templateLocation'), '/')]",
        "storageAccountName": "[concat(parameters('vhdStorageAccountName'), parameters('resourceIndex'))]",
        "storageAccountfront50": "[concat(parameters('vhdStorageAccountName'), 'front' ,parameters('resourceIndex'))]",
        "storageAccountContainerName": "vhds",
        "spinnakerTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'spinnakerDeploy.json')]",
        "storageTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'storageDeploy.json')]",
        "vnetTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'vnetDeploy.json')]",
        "jenkinsTemplateUrl": "[concat(variables('templateBaseUrl'), 'nested/', 'jenkinsDeploy.json')]",
        "vnetName": "[concat(variables('scenarioPrefix'),'Vnet')]",
        "subnet0Name": "[concat(variables('scenarioPrefix'),'Subnet0')]",
        "subnet1Name": "[concat(variables('scenarioPrefix'),'Subnet1')]",
        "subnet2Name": "[concat(variables('scenarioPrefix'),'Subnet2')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet0Name'))]"
    },
    "resources": [
        {
            "apiVersion": "[variables('templateAPIVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "storage-deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "StorageAccount": {
                        "value": {
                            "name": "[variables('storageAccountName')]",
                            "type": "Standard_LRS"
                        }
                    },
                    "PackerStorageAccount": {
                        "value": {
                            "name": "[concat(parameters('packerStorageAccountName'), parameters('resourceIndex'))]",
                            "type": "Standard_LRS"
                        }
                    },
                    "front50StorageAccount": {
                        "value": {
                            "name": "[variables('storageAccountfront50')]",
                            "type": "Standard_LRS"
                        }
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('templateAPIVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "vnet-deployment",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VirtualNetwork": {
                        "value": {
                            "name": "[variables('vnetName')]",
                            "addressSpace": "10.0.0.0/20",
                            "subnet0Name": "[variables('subnet0Name')]",
                            "subnet1Name": "[variables('subnet1Name')]",
                            "subnet2Name": "[variables('subnet2Name')]",
                            "subnet0AddressPrefix": "10.0.0.0/24",
                            "subnet1AddressPrefix": "10.0.1.0/24",
                            "subnet2AddressPrefix": "10.0.2.0/24"
                        }
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('templateAPIVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "spinnaker-deployment",
            "dependsOn": [
                "Microsoft.Resources/deployments/storage-deployment",
                "Microsoft.Resources/deployments/vnet-deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('spinnakerTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "SpinnakerVM": {
                        "value": {
                            "StorageAccountName": "[variables('storageAccountName')]",
                            "StorageAccountContainerName": "[variables('storageAccountContainerName')]",
                            "dnsPrefix": "[concat(parameters('spinnakerDnsPrefix'), parameters('resourceIndex'))]",
                            "publicIPAddressName": "[concat('spinnakerPublicIp', parameters('resourceIndex'))]",
                            "vmSize": "[parameters('spinnakerVMSize')]",
                            "subnet0Ref": "[variables('subnet0Ref')]",
                            "privateIp": "10.0.0.4",
                            "StorageKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountfront50')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                            "Front50StorageAccountNane": "[variables('storageAccountfront50')]"
                        }
                    },
                    "Keyvault": {
                        "value": {
                            "name": "[concat(parameters('keyVaultAccountName'), parameters('resourceIndex'))]",
                            "userName": "[parameters('vmUsername')]",
                            "password": "[parameters('vmPassword')]",
                            "tenantId": "[parameters('spnTenantId')]",
                            "clientId": "[parameters('spnClientId')]",
                            "clientSecret": "[parameters('spnClientSecret')]",
                            "subscriptionId": "[parameters('spnSubscriptionId')]",
                            "resourceGroupName": "[resourceGroup().name]"
                        }
                    },
                    "Packer": {
                        "value": {
                            "storageAccountName": "[concat(parameters('packerStorageAccountName'), parameters('resourceIndex'))]"
                        }
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('templateAPIVersion')]",
            "type": "Microsoft.Resources/deployments",
            "name": "jenkins-deployment",
            "dependsOn": [
                "Microsoft.Resources/deployments/storage-deployment",
                "Microsoft.Resources/deployments/vnet-deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('jenkinsTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "JenkinsVM": {
                        "value": {
                            "StorageAccountName": "[variables('storageAccountName')]",
                            "StorageAccountContainerName": "[variables('storageAccountContainerName')]",
                            "dnsPrefix": "[concat(parameters('jenkinsDnsPrefix'), parameters('resourceIndex'))]",
                            "publicIPAddressName": "[concat('jenkinsPublicIp', parameters('resourceIndex'))]",
                            "vmSize": "[parameters('jenkinsVMSize')]",
                            "subnet0Ref": "[variables('subnet0Ref')]",
                            "privateIp": "10.0.0.5"
                        }
                    },
                    "Keyvault": {
                        "value": {
                            "userName": "[parameters('vmUsername')]",
                            "password": "[parameters('vmPassword')]"
                        }
                    },
                    "Account": {
                        "value": {
                            "OracleUser": "[parameters('OracleUser')]",
                            "OraclePassword": "[parameters('OraclePassword')]",
                            "AptlyRepoName": "[parameters('AptlyRepoName')]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "listKeysOutput": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountfront50')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
        }
    }
}